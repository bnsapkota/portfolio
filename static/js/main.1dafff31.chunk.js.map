{"version":3,"sources":["components/Social.jsx","components/Landing.jsx","components/MainNavBar.jsx","components/Footer.jsx","components/About.jsx","components/Work.jsx","components/Publications.jsx","App.js","reportWebVitals.js","serviceWorker.js","index.js","scripts/styles/landing.module.css"],"names":["Social","socials","href","img","map","value","index","src","process","alt","Landing","TransitionGroup","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","className","styles","landingWrapper","navBarWrapper","navBar","to","btn","socialWrapper","MainNavBar","socialWrapperSmall","exact","activeStyle","Footer","classes","footerWrapper","About","faceWrapper","Work","props","state","loading","iframeLoadedAmount","React","Component","Publications","App","location","this","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"2XAEaA,EAAS,WACpB,IAAIC,EAAU,CACZ,CAACC,KAAK,mCAAoCC,IAAI,6BAC9C,CAACD,KAAK,gCAAiCC,IAAI,4BAG7C,OACEF,EAAQG,KAAI,SAACC,EAAOC,GAClB,OAAO,mBAAGJ,KAAMD,EAAQK,GAAOJ,KAAxB,SAAwD,qBAC7DK,IAAKC,GAAyBP,EAAQK,GAAOH,IAC7CM,IAAKR,EAAQK,GAAOH,OAFoBF,EAAQK,GAAOJ,U,QCJlDQ,EAAU,WACrB,OACE,cAACC,EAAA,EAAD,CACEC,eAAe,aACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,uBAAwB,IACxBC,uBAAwB,IAL1B,SAOI,sBAAKC,UAAWC,IAAOC,eAAvB,UACE,qBAAKF,UAAWC,IAAOE,cAAvB,SACE,qBAAKH,UAAWC,IAAOG,OAAvB,SACE,+BACE,6BAAI,cAAC,IAAD,CAASC,GAAG,SACXL,UAAWC,IAAOK,IADnB,qBAIJ,6BAAI,cAAC,IAAD,CAASD,GAAG,QACXL,UAAWC,IAAOK,IADnB,oBAIJ,6BAAI,cAAC,IAAD,CAASD,GAAG,gBACXL,UAAWC,IAAOK,IADnB,4BAIJ,6BAAI,mBACCN,UAAWC,IAAOK,IAClBrB,KAAK,oCAFN,2BAOV,qBAAKe,UAAWC,IAAOM,cAAvB,SACE,cAAC,EAAD,Y,iCChCCC,EAAa,WACtB,OACI,cAACd,EAAA,EAAD,CACIC,eAAe,aACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,uBAAwB,IACxBC,uBAAwB,IAL5B,SAMI,sBAAKC,UAAWC,IAAOE,cAAvB,UACE,qBAAKH,UAAWC,IAAOQ,mBAAvB,SACE,cAAC,EAAD,MAEF,qBAAKT,UAAWC,IAAOG,OAAvB,SACE,+BACI,6BAAY,cAAC,IAAD,CAASM,OAAK,EAACL,GAAG,IACTL,UAAWC,IAAOK,IAD3B,mBAAH,GAIT,6BAAY,cAAC,IAAD,CAASI,OAAK,EAACL,GAAG,SACTL,UAAWC,IAAOK,IAClBK,YAAa,CAAC,cAAiB,MAAO,MAAS,SAFxD,oBAAH,GAKT,6BAAY,cAAC,IAAD,CAASD,OAAK,EAACL,GAAG,QACTL,UAAWC,IAAOK,IAClBK,YAAa,CAAC,cAAiB,MAAO,MAAS,SAFxD,mBAAH,GAKT,6BAAY,cAAC,IAAD,CAASN,GAAG,gBACHL,UAAWC,IAAOK,IAClBK,YAAa,CAAC,cAAiB,MAAO,MAAS,SAFxD,2BAAH,GAKT,6BAAkB,mBACdX,UAAWC,IAAOK,IAClBrB,KAAK,oCAFS,mBAAT,oB,iBCrChB2B,EAAS,WAClB,OACI,qBAAKZ,UAAWa,IAAQC,cAAxB,SACI,2FCACC,EAAQ,WACf,OACI,sBAAKf,UAAWC,IAAOe,YAAvB,UACG,cAAC,EAAD,IACA,8BACG,cAAC,EAAD,U,iBCmBDC,E,kDAtBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,EACTC,mBAAoB,GAJL,E,0CAQnB,WACI,OACI,sBAAKrB,UAAWC,IAAOe,YAAvB,UACG,cAAC,EAAD,IACA,8BACG,cAAC,EAAD,a,GAdGM,IAAMC,W,iBCuBVC,G,wDAtBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,EACTC,mBAAoB,GAJL,E,0CAQnB,WACI,OACI,sBAAKrB,UAAWC,IAAOe,YAAvB,UACG,cAAC,EAAD,IACA,8BACG,cAAC,EAAD,a,GAdWM,IAAMC,YCqBlBE,E,kDAlBb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAInB,WACI,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQO,SAAUC,KAAKT,MAAMQ,SAA7B,UACE,cAAC,IAAD,CAAOhB,OAAK,EAACkB,KAAK,IAAIC,UAAWpC,IACjC,cAAC,IAAD,CAAOiB,OAAK,EAACkB,KAAK,SAASC,UAAWd,IACtC,cAAC,IAAD,CAAOL,OAAK,EAACkB,KAAK,QAAQC,UAAWZ,IACrC,cAAC,IAAD,CAAOP,OAAK,EAACkB,KAAK,gBAAgBC,UAAWL,a,GAZvCF,IAAMC,WCGTO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKMQ,QACW,cAA7BC,OAAOd,SAASe,UAEe,UAA7BD,OAAOd,SAASe,UAEhBD,OAAOd,SAASe,SAASC,MACvB,2DCXNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BjB,IDkHM,kBAAmBkB,WACrBA,UAAUC,cAAcC,MACrBjB,MAAK,SAAAkB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5BC,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,wBAA0B,yCAAyC,cAAgB,+BAA+B,OAAS,wBAAwB,IAAM,qBAAqB,cAAgB,iC","file":"static/js/main.1dafff31.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Social = () => {\r\n  let socials = [\r\n    {href:'https://inkedin.com/in/bnsapkota', img:'/img/social/LI-In-Bug.png'},\r\n    {href:'https://twitter.com/bnsapkota', img:'/img/social/twitter.png'}\r\n  ]\r\n\r\n  return (\r\n    socials.map((value, index) => {\r\n      return <a href={socials[index].href} key={socials[index].href}><img\r\n        src={process.env.PUBLIC_URL + socials[index].img}\r\n        alt={socials[index].img}/></a>\r\n    })\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from '../scripts/styles/landing.module.css';\r\nimport { Social } from './Social';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\nexport const Landing = () => {\r\n  return (\r\n    <TransitionGroup\r\n      transitionName='transition'\r\n      transitionAppear={true}\r\n      transitionAppearTimeout={500}\r\n      transitionEnterTimeout={500}\r\n      transitionLeaveTimeout={300}\r\n      >\r\n        <div className={styles.landingWrapper}>\r\n          <div className={styles.navBarWrapper}>\r\n            <nav className={styles.navBar}>\r\n              <ul>\r\n                <li><NavLink to=\"/about\"\r\n                     className={styles.btn}\r\n                >ABOUT</NavLink></li>\r\n\r\n                <li><NavLink to=\"/work\"\r\n                     className={styles.btn}\r\n                >WORK</NavLink></li>\r\n\r\n                <li><NavLink to='/publications'\r\n                     className={styles.btn}\r\n                >PUBLICATIONS</NavLink></li>\r\n\r\n                <li><a\r\n                     className={styles.btn}\r\n                     href=\"https://dblp.org/pid/67/4673.html\"\r\n                >DBLP</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className={styles.socialWrapper}>\r\n            <Social/>\r\n          </div>\r\n        </div>\r\n    </TransitionGroup>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport styles from '../scripts/styles/navbar.css'\r\nimport { Social } from './Social';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\nexport const MainNavBar = () => {\r\n    return (\r\n        <TransitionGroup\r\n            transitionName='transition'\r\n            transitionAppear={true}\r\n            transitionAppearTimeout={500}\r\n            transitionEnterTimeout={500}\r\n            transitionLeaveTimeout={300}>\r\n            <div className={styles.navBarWrapper}>\r\n              <div className={styles.socialWrapperSmall}>\r\n                <Social/>\r\n              </div>\r\n              <nav className={styles.navBar}>\r\n                <ul>\r\n                    <li key={0}><NavLink exact to=\"/\"\r\n                                         className={styles.btn}\r\n                    >HOME</NavLink></li>\r\n\r\n                    <li key={1}><NavLink exact to=\"/about\"\r\n                                         className={styles.btn}\r\n                                         activeStyle={{\"letterSpacing\": \"5px\", \"color\": \"white\"}}\r\n                    >ABOUT</NavLink></li>\r\n\r\n                    <li key={2}><NavLink exact to=\"/work\"\r\n                                         className={styles.btn}\r\n                                         activeStyle={{\"letterSpacing\": \"5px\", \"color\": \"white\"}}\r\n                    >WORK</NavLink></li>\r\n\r\n                    <li key={3}><NavLink to=\"/publications\"\r\n                                         className={styles.btn}\r\n                                         activeStyle={{\"letterSpacing\": \"5px\", \"color\": \"white\"}}\r\n                    >PUBLICATIONS</NavLink></li>\r\n\r\n                    <li key={'beats'}><a\r\n                        className={styles.btn}\r\n                        href=\"https://dblp.org/pid/67/4673.html\"\r\n                    >DBLP</a></li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n        </TransitionGroup>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport classes from '../scripts/styles/footer.css'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className={classes.footerWrapper}>\r\n            <span>Copyright &copy; 2021 www.sapkota.org | bn@sapkota.org</span>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styles from '../scripts/styles/about.css'\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport { MainNavBar } from \"./MainNavBar\";\r\nimport { Footer } from \"./Footer\";\r\n\r\nexport const About = () => {\r\n      return (\r\n          <div className={styles.faceWrapper}>\r\n             <MainNavBar/>\r\n             <div>\r\n                <Footer />\r\n             </div>\r\n          </div>\r\n      );\r\n}\r\n","import React from 'react';\r\nimport styles from '../scripts/styles/work.css'\r\nimport work_styles from '../scripts/styles/work.css'\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport { MainNavBar } from './MainNavBar';\r\nimport { Footer } from './Footer';\r\n\r\nclass Work extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      iframeLoadedAmount: 0\r\n    };\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className={styles.faceWrapper}>\r\n             <MainNavBar/>\r\n             <div>\r\n                <Footer />\r\n             </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nWork.propTypes = {};\r\n\r\nexport default Work;\r\n","import React from 'react';\r\nimport styles from '../scripts/styles/faces.css'\r\nimport pub_styles from '../scripts/styles/publications.css'\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport { MainNavBar } from './MainNavBar';\r\nimport { Footer } from './Footer';\r\n\r\nclass Publications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      iframeLoadedAmount: 0\r\n    };\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className={styles.faceWrapper}>\r\n             <MainNavBar/>\r\n             <div>\r\n                <Footer />\r\n             </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nPublications.propTypes = {};\r\n\r\nexport default Publications;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Landing } from './components/Landing';\r\nimport { About } from './components/About';\r\nimport Work from './components/Work';\r\nimport Publications from './components/Publications';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  render() {\r\n      return (\r\n        <Router>\r\n          <Switch location={this.props.location}>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route exact path=\"/work\" component={Work} />\r\n            <Route exact path=\"/publications\" component={Publications} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingWrapper\":\"landing_landingWrapper__1sy24\",\"soundCloudPlayerWrapper\":\"landing_soundCloudPlayerWrapper__I0N-w\",\"navBarWrapper\":\"landing_navBarWrapper__3v4O2\",\"navBar\":\"landing_navBar__Fw4DN\",\"btn\":\"landing_btn__1EysV\",\"socialWrapper\":\"landing_socialWrapper__13AVQ\"};"],"sourceRoot":""}